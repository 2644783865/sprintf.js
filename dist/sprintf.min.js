/*! sprintf-js v1.1.0 | Copyright (c) 2007-present, Alexandru Marasteanu <hello@alexei.ro> | BSD-3-Clause */
!function(e){"use strict";function t(e){return n(s(e),arguments)}function r(e,r){return t.apply(null,[e].concat(r||[]))}function n(e,r){var n,s,i,o,p,c,u,f,l,d=1,g=e.length,b="";for(s=0;s<g;s++)if("string"==typeof e[s])b+=e[s];else if(e[s]instanceof Array){if(o=e[s],o[2])for(n=r[d],i=0;i<o[2].length;i++){if(!n.hasOwnProperty(o[2][i]))throw new Error(t('[sprintf] property "%s" does not exist',o[2][i]));n=n[o[2][i]]}else n=o[1]?r[o[1]]:r[d++];if(a.not_type.test(o[8])&&a.not_primitive.test(o[8])&&n instanceof Function&&(n=n()),a.numeric_arg.test(o[8])&&"number"!=typeof n&&isNaN(n))throw new TypeError(t("[sprintf] expecting number but found %T",n));switch(a.number.test(o[8])&&(f=n>=0),o[8]){case"b":n=parseInt(n,10).toString(2);break;case"c":n=String.fromCharCode(parseInt(n,10));break;case"d":case"i":n=parseInt(n,10);break;case"j":n=JSON.stringify(n,null,o[6]?parseInt(o[6]):0);break;case"e":n=o[7]?parseFloat(n).toExponential(o[7]):parseFloat(n).toExponential();break;case"f":n=o[7]?parseFloat(n).toFixed(o[7]):parseFloat(n);break;case"g":n=o[7]?String(Number(n.toPrecision(o[7]))):parseFloat(n);break;case"o":n=(parseInt(n,10)>>>0).toString(8);break;case"s":n=String(n),n=o[7]?n.substring(0,o[7]):n;break;case"t":n=String(!!n),n=o[7]?n.substring(0,o[7]):n;break;case"T":n=Object.prototype.toString.call(n).slice(8,-1).toLowerCase(),n=o[7]?n.substring(0,o[7]):n;break;case"u":n=parseInt(n,10)>>>0;break;case"v":n=n.valueOf(),n=o[7]?n.substring(0,o[7]):n;break;case"x":n=(parseInt(n,10)>>>0).toString(16);break;case"X":n=(parseInt(n,10)>>>0).toString(16).toUpperCase()}a.json.test(o[8])?b+=n:(!a.number.test(o[8])||f&&!o[3]?l="":(l=f?"+":"-",n=n.toString().replace(a.sign,"")),c=o[4]?"0"===o[4]?"0":o[4].charAt(1):" ",u=o[6]-(l+n).length,p=o[6]&&u>0?c.repeat(u):"",b+=o[5]?l+n+p:"0"===c?l+p+n:p+l+n)}return b}function s(e){if(i[e])return i[e];for(var t,r=e,n=[],s=0;r;){if(null!==(t=a.text.exec(r)))n.push(t[0]);else if(null!==(t=a.modulo.exec(r)))n.push("%");else{if(null===(t=a.placeholder.exec(r)))throw new SyntaxError("[sprintf] unexpected placeholder");if(t[2]){s|=1;var o=[],p=t[2],c=[];if(null===(c=a.key.exec(p)))throw new SyntaxError("[sprintf] failed to parse named argument key");for(o.push(c[1]);""!==(p=p.substring(c[0].length));)if(null!==(c=a.key_access.exec(p)))o.push(c[1]);else{if(null===(c=a.index_access.exec(p)))throw new SyntaxError("[sprintf] failed to parse named argument key");o.push(c[1])}t[2]=o}else s|=2;if(3===s)throw new Error("[sprintf] mixing positional and named placeholders is not (yet) supported");n.push(t)}r=r.substring(t[0].length)}return i[e]=n}var a={not_string:/[^s]/,not_bool:/[^t]/,not_type:/[^T]/,not_primitive:/[^v]/,number:/[diefg]/,numeric_arg:/[bcdiefguxX]/,json:/[j]/,not_json:/[^j]/,text:/^[^\x25]+/,modulo:/^\x25{2}/,placeholder:/^\x25(?:([1-9]\d*)\$|\(([^\)]+)\))?(\+)?(0|'[^$])?(-)?(\d+)?(?:\.(\d+))?([b-gijostTuvxX])/,key:/^([a-z_][a-z_\d]*)/i,key_access:/^\.([a-z_][a-z_\d]*)/i,index_access:/^\[(\d+)\]/,sign:/^[\+\-]/},i=Object.create(null);"undefined"!=typeof exports&&(exports.sprintf=t,exports.vsprintf=r),void 0!==e&&(e.sprintf=t,e.vsprintf=r,"function"==typeof define&&define.amd&&define(function(){return{sprintf:t,vsprintf:r}}))}(this);
//# sourceMappingURL=sprintf.min.js.map
